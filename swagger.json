{
  "openapi": "3.0.0",
  "info": {
    "title": "Agilist",
    "description": "Some useful links:\n- [The team website](https://github.com/swagger-api/swagger-petstore)",
    "version": "0.1.0"
  },
  "tags": [
    {
      "name": "users",
      "description": "Everything related to users"
    },
    {
      "name": "boards",
      "description": "Everything related to boards"
    },
    {
      "name": "projects",
      "description": "Everything related to projects"
    },
    {
      "name": "tickets",
      "description": "Everything related to tickets"
    },
    {
      "name": "tags",
      "description": "Everything related to tags"
    }
  ],
  "paths": {
    "/api/user/byMail": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "fetch user by e-mail address",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserbyMail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful registration"
          },
          "400": {
            "description": "User not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Fetch all users",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllUsers"
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Fetch specific user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Fetch all projects",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllProjects"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create project",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "Unsuccesul response"
          }
        }
      }
    },
    "/tag": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "Fetch all tags",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "400": {
            "description": "Unsuccesful response"
          }
        }
      },
      "post": {
        "tags": [
          "tags"
        ],
        "summary": "Fetch specific user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "Unsuccesful response"
          }
        }
      }
    },
    "/ticket/{ticketId}": {
      "get": {
        "tags": [
          "tickets"
        ],
        "summary": "Fetch ticket by id",
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the ticket to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "tickets"
        ],
        "summary": "Update ticket by id",
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the ticket to get"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketPUT"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "tickets"
        ],
        "summary": "Delete ticket by id",
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the ticket to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "User not found"
          }
        }
      }
    },
    "/ticket": {
      "get": {
        "tags": [
          "tickets"
        ],
        "summary": "Fetch all tickets",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllTickets"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tickets"
        ],
        "summary": "Create ticket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ticket"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "Unsuccesful response"
          }
        }
      }
    },
    "/ticket/updateTickets": {
      "put": {
        "tags": [
          "tickets"
        ],
        "summary": "Update tickets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ticket"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllTickets"
                }
              }
            }
          }
        }
      }
    },
    "/board": {
      "post": {
        "tags": [
          "boards"
        ],
        "summary": "Create board",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/board"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful creation"
          },
          "400": {
            "description": "Unsuccesful creation"
          }
        }
      }
    },
    "/board/{boardId}": {
      "get": {
        "tags": [
          "boards"
        ],
        "summary": "Get board by id",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the board to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllBoards"
                }
              }
            }
          },
          "400": {
            "description": "Board not found"
          }
        }
      },
      "delete": {
        "tags": [
          "boards"
        ],
        "summary": "Delete board by id",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the board to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete"
          },
          "400": {
            "description": "Board not found"
          }
        }
      },
      "put": {
        "tags": [
          "boards"
        ],
        "summary": "Update board by id",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the ticket to get"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketPUT"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "User not found"
          }
        }
      }
    },
    "/project/{boardId}/createBoard": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/board"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful creation"
          },
          "400": {
            "description": "Unsuccesful creation"
          }
        }
      }
    },
    "/project/{boardId}/removeUsers": {
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "Remove users from board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request"
          },
          "400": {
            "description": "Unsuccesful request"
          }
        }
      }
    },
    "/project/{boardId}/boards": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Fetch all boards",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllBoards"
                }
              }
            }
          },
          "400": {
            "description": "Board not found"
          }
        }
      }
    },
    "/project/{boardId}/addUsers": {
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "Add users to board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request"
          },
          "400": {
            "description": "Unsuccesful request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "635a4995e536e356577c3395"
          },
          "fullName": {
            "type": "string",
            "example": "Josko Mrkva"
          },
          "userName": {
            "type": "string",
            "format": "email",
            "example": "joskomrkva"
          },
          "password": {
            "writeOnly": true,
            "type": "string",
            "format": "password",
            "example": "secret"
          },
          "email": {
            "type": "string",
            "example": "email@host.com"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-10-27T09:04:21.916Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-10-27T09:04:21.916Z"
          }
        }
      },
      "Regex": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "example": "Josko"
          }
        }
      },
      "TicketPUT": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "635a4995e536e356577c3395"
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IDs"
            }
          }
        }
      },
      "IDs": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "635a4995e536e356577c3395"
          }
        }
      },
      "AllUsers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "UserbyMail": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "email@host.com"
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "635a4995e536e356577c3395"
          },
          "name": {
            "type": "string",
            "example": "Project name"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "boards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Board"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-10-27T09:04:21.916Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-10-27T09:04:21.916Z"
          }
        }
      },
      "AllProjects": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Project"
        }
      },
      "Board": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "635a4995e536e356577c3395"
          },
          "name": {
            "type": "string",
            "example": "Board name"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "__v": {
            "type": "number",
            "example": 123,
            "writeOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-10-27T09:04:21.916Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-10-27T09:04:21.916Z"
          }
        }
      },
      "AllBoards": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Board"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "example": "Label of the ticket"
          },
          "value": {
            "type": "string",
            "example": "Value of the ticket"
          },
          "type": {
            "type": "string",
            "example": "User"
          }
        }
      },
      "Ticket": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "635a4995e536e356577c3395"
          },
          "task": {
            "type": "string",
            "example": "Task name"
          },
          "content": {
            "type": "string",
            "example": "Content"
          },
          "priority": {
            "type": "number",
            "example": 1
          },
          "column": {
            "type": "number",
            "example": 5
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "assignedTo": {
            "$ref": "#/components/schemas/User"
          },
          "__v": {
            "type": "number",
            "example": 123,
            "writeOnly": true
          },
          "due": {
            "example": "2022-10-27T09:04:21.916Z"
          }
        }
      },
      "AllTickets": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Ticket"
        }
      },
      "board": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "boardName"
          },
          "users": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "project": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ProjectName"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "users": {
            "$ref": "#/components/schemas/User"
          }
        }
      }
    }
  }
}